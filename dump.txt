this file used to dump old algrothims just in case . 












sf::Vector2f velocity = canonBall->velocity;
      velocity.x = velocity.x / 100; 
      velocity.y = velocity.y / 100; 
      sf::Vector2f finalPos = canonBall->finalPosition;
      sf::Vector2f currentPos = canonBall->getPosition();
      int xDirection{1}, yDirection{1}; 
      if (currentPos.x > finalPos.x)
        xDirection = -1; 
      if (currentPos.y > finalPos.y)
        yDirection = -1;

      velocity.x *= xDirection;
      velocity.y *= yDirection;
      
      float deltaXPos = abs(finalPos.x - currentPos.x);
      float deltaYPos = abs(finalPos.y - currentPos.y);
      float nextXPos = currentPos.x + velocity.x;
      float nextYPos = currentPos.y + velocity.y;


      if (nextXPos > finalPos.x)
        velocity.x = deltaXPos;
      if (yDirection < 0 && nextYPos < finalPos.y)
        velocity.y = (deltaYPos * yDirection);
      else if (yDirection > 0 && nextYPos > finalPos.y)
        velocity.y = (deltaYPos * yDirection);
        
/*
      std::cout << "Current X : " << currentPos.x << " Final X : " << finalPos.x 
                << endl
                << "Current Y : " << currentPos.y << " Final Y : " << finalPos.y 
                << endl
        ;
      //*/
      if ((floor(currentPos.x) != finalPos.x)  ||  (floor(currentPos.y) != finalPos.y)) {
        canonBall->move(velocity);
        UPDATE_DELAY_CLOCK.restart();
      }

      currentPos = canonBall->getPosition();
      if ((ceil(currentPos.y) == ceil(finalPos.y)) && (canonBall->finalPosition.y < canonBall->initPosition.y))
      {
        canonBall->finalPosition.y = canonBall->initPosition.y;
        float t = projectile::calcCurrentTime(canonBall->velocity.x,currentPos.x-canonBall->initPosition.x);
        canonBall->velocity.y = projectile::calcCurrentYVelocity(canonBall->velocity.y,t);
      }
      // TODO: Stop moving after reaching the final position .
      if (ceil(currentPos.x) == finalPos.x && ceil(currentPos.y) == canonBall->initPosition.y)
        canonBall->isMoving = false;